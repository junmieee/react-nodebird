{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nexport var initialState = {\n  mainPosts: [{\n    id: 1,\n    User: {\n      id: 1,\n      nickname: 'Chloe'\n    },\n    content: '첫 번째 게시글 #헤시태그 #익스프레스',\n    Images: [{\n      src: 'https://i.pinimg.com/474x/3e/29/14/3e29149409aafb78f61ff6f3ff0c9f98.jpg'\n    }, {\n      src: 'https://i.pinimg.com/474x/ea/05/f5/ea05f54b3824fbc4ba2345e873190b33.jpg'\n    }, {\n      src: 'https://i.pinimg.com/474x/ac/f8/5a/acf85a2ae3a939ba695b6af517302155.jpg'\n    }],\n    Comments: [{\n      id: shortId.generate(),\n      User: {\n        id: shortId.generate(),\n        nickname: 'nero'\n      },\n      content: '우아아'\n    }, {\n      id: shortId.generate(),\n      User: {\n        nickname: 'hero'\n      },\n      content: '신기하다'\n    }]\n  }],\n  //업로드 하는 이미지 경로들\n  imagePaths: [],\n  //포스트 추가가 완료되면 true \n  addPostLoading: false,\n  addPostDone: false,\n  addPostError: null,\n  addCommentLoading: false,\n  addCommentDone: false,\n  addCommentError: null\n};\nexport var ADD_POST_REQUEST = 'ADD_POST_REQUEST';\nexport var ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\nexport var ADD_POST_FAILURE = 'ADD_POST_FAILURE';\nexport var ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\nexport var ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\nexport var ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE';\n\n//액션크리에이터\nexport var addPost = function addPost(data) {\n  return {\n    type: ADD_POST_REQUEST,\n    data: data\n  };\n};\nimport shortId from 'shortid';\nexport var addComment = function addComment(data) {\n  return {\n    type: ADD_COMMENT_REQUEST,\n    data: data\n  };\n};\nexport var dummyPost = function dummyPost(data) {\n  return {\n    id: shortId.generate(),\n    content: data,\n    User: {\n      id: 1,\n      nickname: 'Chloe'\n    },\n    Images: [{\n      src: ''\n    }],\n    Comments: []\n  };\n};\nvar dummyComment = function dummyComment(data) {\n  return {\n    id: shortId.generate(),\n    content: data,\n    User: {\n      id: 1,\n      nickname: 'Chloe'\n    }\n  };\n};\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case ADD_POST_REQUEST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        addPostLoading: true,\n        addPostDone: false,\n        addPostError: null\n      });\n    case ADD_POST_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        mainPosts: [dummyPost(action.data)].concat(_toConsumableArray(state.mainPosts)),\n        addPostLoading: false,\n        addPostDone: true\n      });\n    case ADD_POST_FAILURE:\n      return {\n        addPostLoading: false,\n        addPostError: action.error\n      };\n    case ADD_COMMENT_REQUEST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        addCommentLoading: true,\n        addCommentDone: false,\n        addCommentError: null\n      });\n    case ADD_COMMENT_SUCCESS:\n      var postIndex = state.mainPosts.findIndex(function (y) {\n        return y.id === action.data.postId;\n      });\n      var post = _objectSpread({}, state.mainPosts[postIndex]);\n      post.Comments = [dummyComment(action.data.content)].concat(_toConsumableArray(post.Comments));\n      var mainPosts = _toConsumableArray(state.mainPosts);\n      mainPosts[postIndex] = post;\n      return _objectSpread(_objectSpread({}, state), {}, {\n        mainPosts: mainPosts,\n        addCommentLoading: false,\n        addCommentDone: true\n      });\n    case ADD_COMMENT_FAILURE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        addCommentLoading: false,\n        addCommentError: action.error\n      });\n    default:\n      return state;\n  }\n};\nexport default reducer;","map":{"version":3,"names":["initialState","mainPosts","id","User","nickname","content","Images","src","Comments","shortId","generate","imagePaths","addPostLoading","addPostDone","addPostError","addCommentLoading","addCommentDone","addCommentError","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","addPost","data","type","addComment","dummyPost","dummyComment","reducer","state","action","error","postIndex","findIndex","y","postId","post"],"sources":["/Users/junmishin/Desktop/projects/nobird/front/reducers/post.js"],"sourcesContent":["\nexport const initialState = {\n    mainPosts: [{\n        id: 1,\n        User: {\n            id: 1,\n            nickname: 'Chloe',\n        },\n        content: '첫 번째 게시글 #헤시태그 #익스프레스',\n        Images: [{\n            src: 'https://i.pinimg.com/474x/3e/29/14/3e29149409aafb78f61ff6f3ff0c9f98.jpg'\n\n        }, {\n            src: 'https://i.pinimg.com/474x/ea/05/f5/ea05f54b3824fbc4ba2345e873190b33.jpg'\n\n        }, {\n            src: 'https://i.pinimg.com/474x/ac/f8/5a/acf85a2ae3a939ba695b6af517302155.jpg'\n\n        }],\n        Comments: [\n            {\n                id: shortId.generate(),\n                User: {\n                    id: shortId.generate(),\n\n                    nickname: 'nero',\n                },\n                content: '우아아'\n            },\n            {\n                id: shortId.generate(),\n                User: {\n                    nickname: 'hero',\n\n                },\n                content: '신기하다'\n\n            }\n        ]\n    }],\n    //업로드 하는 이미지 경로들\n    imagePaths: [],\n    //포스트 추가가 완료되면 true \n    addPostLoading: false,\n    addPostDone: false,\n    addPostError: null,\n    addCommentLoading: false,\n    addCommentDone: false,\n    addCommentError: null,\n};\n\nexport const ADD_POST_REQUEST = 'ADD_POST_REQUEST';\nexport const ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\nexport const ADD_POST_FAILURE = 'ADD_POST_FAILURE';\n\nexport const ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\nexport const ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\nexport const ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE';\n\n\n//액션크리에이터\nexport const addPost = (data) => ({\n    type: ADD_POST_REQUEST,\n    data\n});\nimport shortId from 'shortid'\n\n\nexport const addComment = (data) => ({\n    type: ADD_COMMENT_REQUEST,\n    data,\n});\n\nexport const dummyPost = (data) => ({\n    id: shortId.generate(),\n    content: data,\n    User: {\n        id: 1,\n        nickname: 'Chloe'\n    },\n    Images: [{\n        src: ''\n    }],\n    Comments: [],\n\n});\n\n\nconst dummyComment = (data) => ({\n    id: shortId.generate(),\n    content: data,\n    User: {\n        id: 1,\n        nickname: 'Chloe',\n    }\n\n\n});\n\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case ADD_POST_REQUEST:\n            return {\n                ...state,\n                addPostLoading: true,\n                addPostDone: false,\n                addPostError: null,\n            }\n        case ADD_POST_SUCCESS:\n            return {\n                ...state,\n                mainPosts: [dummyPost(action.data), ...state.mainPosts],\n                addPostLoading: false,\n                addPostDone: true,\n            };\n        case ADD_POST_FAILURE:\n            return {\n                addPostLoading: false,\n                addPostError: action.error,\n            };\n        case ADD_COMMENT_REQUEST:\n            return {\n                ...state,\n                addCommentLoading: true,\n                addCommentDone: false,\n                addCommentError: null,\n            }\n        case ADD_COMMENT_SUCCESS:\n            const postIndex = state.mainPosts.findIndex((y) => y.id === action.data.postId);\n            const post = { ...state.mainPosts[postIndex] };\n            post.Comments = [dummyComment(action.data.content), ...post.Comments];\n            const mainPosts = [...state.mainPosts];\n            mainPosts[postIndex] = post;\n\n\n\n            return {\n                ...state,\n                mainPosts,\n                addCommentLoading: false,\n                addCommentDone: true,\n            };\n        case ADD_COMMENT_FAILURE:\n            return {\n                ...state,\n                addCommentLoading: false,\n                addCommentError: action.error,\n            }\n\n        default:\n            return state;\n    }\n}\n\n\n\nexport default reducer"],"mappings":"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"},"metadata":{},"sourceType":"module"}