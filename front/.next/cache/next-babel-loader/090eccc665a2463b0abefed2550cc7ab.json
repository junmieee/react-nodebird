{"ast":null,"code":"var _this = this,\n  _jsxFileName = \"/Users/junmishin/Desktop/projects/nobird/front/components/PostCard.js\",\n  _s = $RefreshSig$();\nvar __jsx = React.createElement;\nimport React, { useState, useCallback } from 'react';\nimport { Card, Button, Popover, Avatar, List, Comment } from 'antd';\nimport { RetweetOutlined, MessageOutlined, HeartOutlined, EllipsisOutlined, HeartTwoTone } from '@ant-design/icons';\nimport { useDispatch, useSelector } from 'react-redux';\nimport PostImages from './PostImages';\nimport CommentForm from './CommentForm';\nimport PostCardContent from './PostCardContent';\nimport { LIKE_POST_REQUEST, REMOVE_POST_REQUEST, UNLIKE_POST_REQUEST } from '../reducers/post';\nimport FollowButton from './FollowButton';\nvar PostCard = function PostCard(_ref) {\n  _s();\n  var post = _ref.post;\n  var dispatch = useDispatch();\n  var _useSelector = useSelector(function (state) {\n      return state.post;\n    }),\n    removePostLoading = _useSelector.removePostLoading;\n  var _useState = useState(false),\n    commentFormOpened = _useState[0],\n    setCommentFormOpened = _useState[1];\n  var id = user && user.id;\n  var liked = post.Likers.find(function (v) {\n    return v.id === id;\n  });\n  var onLiked = useCallback(function () {\n    dispatch({\n      type: LIKE_POST_REQUEST,\n      data: post.id\n    });\n  }, []);\n  var onUnLike = useCallback(function () {\n    dispatch({\n      type: UNLIKE_POST_REQUEST,\n      data: post.id\n    });\n  }, []);\n  var onToggleCommnet = useCallback(function () {\n    setCommentFormOpened(function (prev) {\n      return !prev;\n    });\n  });\n  var onRemovePost = useCallback(function () {\n    dispatch({\n      type: REMOVE_POST_REQUEST,\n      data: post.id\n    });\n  });\n  var onRetweet = useCallback(function () {}, []);\n\n  //로그인을 한 상태일 때 조건문 만들기\n  var _useSelector2 = useSelector(function (state) {\n      return state.user;\n    }),\n    user = _useSelector2.user;\n  return __jsx(\"div\", {\n    style: {\n      marginBottom: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, __jsx(Card, {\n    cover: post.Images[0] && __jsx(PostImages, {\n      images: post.Images,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 42\n      }\n    }),\n    actions: [__jsx(RetweetOutlined, {\n      key: \"retweet\",\n      onClick: onRetweet,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }\n    }), liked ? __jsx(HeartTwoTone, {\n      twoToneColor: \"#eb2f96\",\n      onClick: onUnLike,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 29\n      }\n    }) : __jsx(HeartOutlined, {\n      key: \"heart\",\n      onClick: onLiked,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 90\n      }\n    }), __jsx(MessageOutlined, {\n      key: \"comment\",\n      onClick: onToggleCommnet,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }\n    }), __jsx(Popover, {\n      key: \"more\",\n      content: __jsx(Button.Group, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 25\n        }\n      }, id && post.User.id === id ? __jsx(React.Fragment, null, __jsx(Button, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 37\n        }\n      }, \"\\uC218\\uC815\"), __jsx(Button, {\n        type: \"danger\",\n        loading: removePostLoading,\n        onClick: onRemovePost,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 37\n        }\n      }, \"\\uC0AD\\uC81C\")) : __jsx(Button, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 33\n        }\n      }, \"\\uC2E0\\uACE0\")),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 21\n      }\n    }, __jsx(EllipsisOutlined, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 25\n      }\n    }))],\n    extra: id && __jsx(FollowButton, {\n      post: post,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 30\n      }\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, __jsx(Card.Meta, {\n    avatar: __jsx(Avatar, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 29\n      }\n    }, post.User.nickname[0]),\n    title: post.User.nickname,\n    description: __jsx(PostCardContent, {\n      postData: post.content,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 34\n      }\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }\n  })), commentFormOpened && __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 17\n    }\n  }, __jsx(CommentForm, {\n    post: post,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 21\n    }\n  }), __jsx(List, {\n    header: \"\".concat(post.Comments.length, \"\\uAC1C\\uC758 \\uB313\\uAE00\"),\n    itemLayout: \"horizontal\"\n    // dataSource가 renderItem의 item으로 각각 들어간다\n    ,\n    dataSource: post.Comments,\n    renderItem: function renderItem(item) {\n      return __jsx(\"li\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 29\n        }\n      }, __jsx(Comment, {\n        author: item.User.nickname,\n        avatar: __jsx(Avatar, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 45\n          }\n        }, item.User.nickname[0]),\n        content: item.content,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 33\n        }\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 21\n    }\n  })));\n};\n_s(PostCard, \"WrrJcmx+QKym4ryMVIm4CUpW1es=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n_c = PostCard;\nexport default PostCard;\nvar _c;\n$RefreshReg$(_c, \"PostCard\");","map":{"version":3,"names":["React","useState","useCallback","Card","Button","Popover","Avatar","List","Comment","RetweetOutlined","MessageOutlined","HeartOutlined","EllipsisOutlined","HeartTwoTone","useDispatch","useSelector","PostImages","CommentForm","PostCardContent","LIKE_POST_REQUEST","REMOVE_POST_REQUEST","UNLIKE_POST_REQUEST","FollowButton","PostCard","post","dispatch","state","removePostLoading","commentFormOpened","setCommentFormOpened","id","user","liked","Likers","find","v","onLiked","type","data","onUnLike","onToggleCommnet","prev","onRemovePost","onRetweet","marginBottom","Images","User","nickname","content","Comments","length","item"],"sources":["/Users/junmishin/Desktop/projects/nobird/front/components/PostCard.js"],"sourcesContent":["import React, { useState, useCallback } from 'react';\nimport { Card, Button, Popover, Avatar, List, Comment } from 'antd';\nimport { RetweetOutlined, MessageOutlined, HeartOutlined, EllipsisOutlined, HeartTwoTone } from '@ant-design/icons';\nimport { useDispatch, useSelector } from 'react-redux';\nimport PostImages from './PostImages'\nimport CommentForm from './CommentForm';\nimport PostCardContent from './PostCardContent';\nimport { LIKE_POST_REQUEST, REMOVE_POST_REQUEST, UNLIKE_POST_REQUEST } from '../reducers/post';\nimport FollowButton from './FollowButton';\n\n\n\n\nconst PostCard = ({ post }) => {\n    const dispatch = useDispatch();\n    const { removePostLoading } = useSelector((state) => state.post)\n    const [commentFormOpened, setCommentFormOpened] = useState(false);\n\n    const id = user && user.id\n\n    const liked = post.Likers.find((v) => v.id === id);\n\n    const onLiked = useCallback(() => {\n        dispatch({\n            type: LIKE_POST_REQUEST,\n            data: post.id\n        })\n\n    }, []);\n    const onUnLike = useCallback(() => {\n        dispatch({\n            type: UNLIKE_POST_REQUEST,\n            data: post.id\n        })\n\n    }, []);\n\n    const onToggleCommnet = useCallback(() => {\n        setCommentFormOpened((prev => !prev))\n    });\n\n\n    const onRemovePost = useCallback(() => {\n        dispatch({\n            type: REMOVE_POST_REQUEST,\n            data: post.id,\n\n        })\n    });\n\n    const onRetweet = useCallback(() => { }, [])\n\n    //로그인을 한 상태일 때 조건문 만들기\n    const { user } = useSelector((state) => state.user)\n\n    return (\n        <div style={{ marginBottom: 10 }}>\n            <Card\n                cover={post.Images[0] && <PostImages images={post.Images} />}\n                actions={[\n                    <RetweetOutlined key=\"retweet\" onClick={onRetweet} />,\n                    liked ? <HeartTwoTone twoToneColor=\"#eb2f96\" onClick={onUnLike} /> : <HeartOutlined key=\"heart\" onClick={onLiked} />,\n                    <MessageOutlined key=\"comment\" onClick={onToggleCommnet} />,\n                    <Popover key=\"more\" content={(\n                        <Button.Group>\n                            {/* 내 아이디가 있고 게시글 작성자 아이디가 나랑 같으면 수정 삭제버튼 보이고 다르면 신고버튼 보이게*/}\n                            {id && post.User.id === id ? (\n                                <>\n                                    <Button>수정</Button>\n                                    <Button type=\"danger\" loading={removePostLoading} onClick={onRemovePost}>삭제</Button>\n                                </>)\n                                :\n                                <Button>신고</Button>}\n\n\n                        </Button.Group>\n                    )}>\n                        <EllipsisOutlined />\n                    </Popover>\n                ]}\n                extra={id && <FollowButton post={post} />}\n\n            >\n                <Card.Meta\n                    avatar={<Avatar>{post.User.nickname[0]}</Avatar>}\n                    title={post.User.nickname}\n                    description={<PostCardContent postData={post.content} />}\n                />\n            </Card>\n            {commentFormOpened && (\n                <div>\n                    <CommentForm post={post} />\n                    <List header={`${post.Comments.length}개의 댓글`}\n                        itemLayout='horizontal'\n                        // dataSource가 renderItem의 item으로 각각 들어간다\n                        dataSource={post.Comments}\n                        renderItem={(item) => (\n                            <li>\n                                <Comment\n                                    author={item.User.nickname}\n                                    avatar={<Avatar>{item.User.nickname[0]}</Avatar>}\n                                    content={item.content}\n                                />\n\n                            </li>\n                        )}\n                    />\n                </div>\n            )}\n            {/* <CommentForm />\n            <Comments /> */}\n        </div>\n\n    )\n}\n\nexport default PostCard\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}