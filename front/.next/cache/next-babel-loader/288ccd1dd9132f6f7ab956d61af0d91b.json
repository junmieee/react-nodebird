{"ast":null,"code":"var _this = this,\n  _jsxFileName = \"/Users/junmishin/Desktop/projects/nobird/front/components/PostCardContent.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Link from 'next/link';\nimport PropTypes from 'prop-types';\nvar PostCardContent = function PostCardContent(_ref) {\n  var postData = _ref.postData;\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 9\n    }\n  }, postData.split(/(#[^\\s]+)/g).map(function (v) {\n    if (postData.text(/(#[^\\s]+)/)) {\n      return __jsx(Link, {\n        href: \"/hashtag/\".concat(v.slice(1)),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 28\n        }\n      }, __jsx(\"a\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 66\n        }\n      }));\n    }\n    return v;\n  }));\n};\n_c = PostCardContent;\nPostCardContent.PropTypes = {\n  postData: PropTypes.string.isRequired\n};\nexport default PostCardContent;\nvar _c;\n$RefreshReg$(_c, \"PostCardContent\");","map":{"version":3,"names":["React","Link","PropTypes","PostCardContent","postData","split","map","v","text","slice","string","isRequired"],"sources":["/Users/junmishin/Desktop/projects/nobird/front/components/PostCardContent.js"],"sourcesContent":["import React from 'react'\nimport Link from 'next/link';\nimport PropTypes from 'prop-types';\n\nconst PostCardContent = ({ postData }) => {\n    return (\n        <div>\n            {postData.split(/(#[^\\s]+)/g).map((v) => {\n                if (postData.text(/(#[^\\s]+)/)) {\n                    return <Link href={`/hashtag/${v.slice(1)}`}><a></a></Link>\n                }\n\n                return v;\n            })}\n\n        </div>\n    )\n}\n\nPostCardContent.PropTypes = { postData: PropTypes.string.isRequired }\n\nexport default PostCardContent\n"],"mappings":";;;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,IAAI,MAAM,WAAW;AAC5B,OAAOC,SAAS,MAAM,YAAY;AAElC,IAAMC,eAAe,GAAG,SAAlBA,eAAe,OAAqB;EAAA,IAAfC,QAAQ,QAARA,QAAQ;EAC/B,OACI;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACKA,QAAQ,CAACC,KAAK,CAAC,YAAY,CAAC,CAACC,GAAG,CAAC,UAACC,CAAC,EAAK;IACrC,IAAIH,QAAQ,CAACI,IAAI,CAAC,WAAW,CAAC,EAAE;MAC5B,OAAO,MAAC,IAAI;QAAC,IAAI,qBAAcD,CAAC,CAACE,KAAK,CAAC,CAAC,CAAC,CAAG;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GAAC;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EAAO,CAAO;IAC/D;IAEA,OAAOF,CAAC;EACZ,CAAC,CAAC,CAEA;AAEd,CAAC;AAAA,KAbKJ,eAAe;AAerBA,eAAe,CAACD,SAAS,GAAG;EAAEE,QAAQ,EAAEF,SAAS,CAACQ,MAAM,CAACC;AAAW,CAAC;AAErE,eAAeR,eAAe;AAAA;AAAA"},"metadata":{},"sourceType":"module"}