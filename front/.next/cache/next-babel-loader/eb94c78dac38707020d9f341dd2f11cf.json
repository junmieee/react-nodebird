{"ast":null,"code":"var _jsxFileName = \"/Users/junmishin/Desktop/projects/nobird/front/components/FollowButton.js\";\nvar __jsx = React.createElement;\nimport React, { useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport { Button } from 'antd';\nimport useSelection from 'antd/lib/table/hooks/useSelection';\nimport { useSelector } from 'react-redux';\nimport { UNFOLLOW_REQUEST } from '../reducers/user';\nconst FollowButton = ({\n  post\n}) => {\n  const {\n    user,\n    followLoading,\n    unfollowLoading\n  } = useSelector(state => state.user);\n  //내가 팔로잉 하고 있는 시람의 목록 \n  const isFollowing = user && user.Followings.find(v => v.id === post.User.id);\n  const onClickButton = useCallback(() => {\n    if (isFollowing) {\n      dispatchEvent({\n        type: UNFOLLOW_REQUEST\n      });\n    }\n  }, [isFollowing]);\n  return __jsx(Button, {\n    loading: followLoading || unfollowLoading,\n    onClick: onClickButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, isFollowing ? '언팔로우' : '팔로우 ');\n};\nFollowButton.propTypes = {\n  post: PropTypes.object.isRequired\n};\nexport default FollowButton;","map":{"version":3,"names":["React","useCallback","PropTypes","Button","useSelection","useSelector","UNFOLLOW_REQUEST","FollowButton","post","user","followLoading","unfollowLoading","state","isFollowing","Followings","find","v","id","User","onClickButton","dispatchEvent","type","propTypes","object","isRequired"],"sources":["/Users/junmishin/Desktop/projects/nobird/front/components/FollowButton.js"],"sourcesContent":["import React, { useCallback } from 'react'\nimport PropTypes from 'prop-types';\nimport { Button } from 'antd'\nimport useSelection from 'antd/lib/table/hooks/useSelection';\nimport { useSelector } from 'react-redux';\nimport { UNFOLLOW_REQUEST } from '../reducers/user';\n\nconst FollowButton = ({ post }) => {\n    const { user, followLoading, unfollowLoading } = useSelector((state) => state.user)\n    //내가 팔로잉 하고 있는 시람의 목록 \n    const isFollowing = user && user.Followings.find((v) => v.id === post.User.id);\n\n    const onClickButton = useCallback(() => {\n        if (isFollowing) {\n            dispatchEvent({\n                type: UNFOLLOW_REQUEST,\n            })\n\n        }\n\n    }, [isFollowing])\n\n    return (\n        <Button loading={followLoading || unfollowLoading} onClick={onClickButton}>\n            {isFollowing ? '언팔로우' : '팔로우 '}\n        </Button>\n    )\n}\n\nFollowButton.propTypes = {\n    post: PropTypes.object.isRequired,\n}\n\n\nexport default FollowButton\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,WAAW,QAAQ,OAAO;AAC1C,OAAOC,SAAS,MAAM,YAAY;AAClC,SAASC,MAAM,QAAQ,MAAM;AAC7B,OAAOC,YAAY,MAAM,mCAAmC;AAC5D,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,gBAAgB,QAAQ,kBAAkB;AAEnD,MAAMC,YAAY,GAAG,CAAC;EAAEC;AAAK,CAAC,KAAK;EAC/B,MAAM;IAAEC,IAAI;IAAEC,aAAa;IAAEC;EAAgB,CAAC,GAAGN,WAAW,CAAEO,KAAK,IAAKA,KAAK,CAACH,IAAI,CAAC;EACnF;EACA,MAAMI,WAAW,GAAGJ,IAAI,IAAIA,IAAI,CAACK,UAAU,CAACC,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACC,EAAE,KAAKT,IAAI,CAACU,IAAI,CAACD,EAAE,CAAC;EAE9E,MAAME,aAAa,GAAGlB,WAAW,CAAC,MAAM;IACpC,IAAIY,WAAW,EAAE;MACbO,aAAa,CAAC;QACVC,IAAI,EAAEf;MACV,CAAC,CAAC;IAEN;EAEJ,CAAC,EAAE,CAACO,WAAW,CAAC,CAAC;EAEjB,OACI,MAAC,MAAM;IAAC,OAAO,EAAEH,aAAa,IAAIC,eAAgB;IAAC,OAAO,EAAEQ,aAAc;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACrEN,WAAW,GAAG,MAAM,GAAG,MAAM,CACzB;AAEjB,CAAC;AAEDN,YAAY,CAACe,SAAS,GAAG;EACrBd,IAAI,EAAEN,SAAS,CAACqB,MAAM,CAACC;AAC3B,CAAC;AAGD,eAAejB,YAAY"},"metadata":{},"sourceType":"module"}