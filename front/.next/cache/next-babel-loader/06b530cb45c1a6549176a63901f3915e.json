{"ast":null,"code":"var _jsxFileName = \"/Users/junmishin/Desktop/projects/nobird/front/components/CommentForm.js\";\nvar __jsx = React.createElement;\nimport React, { useCallback, useState } from 'react';\nimport { Form } from 'antd';\nimport useInput from './hooks/useinput';\nimport Input from 'antd/lib/input/Input';\nimport PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\nconst CommentForm = ({\n  post\n}) => {\n  const id = useSelector(state => {\n    var _state$user$user;\n    return (_state$user$user = state.user.user) === null || _state$user$user === void 0 ? void 0 : _state$user$user.id;\n  });\n  const [commentText, onSubmitCommentText] = useInput('');\n  const onSubmitComment = useCallback(() => {\n    console.log(post.id, commentText);\n  }, [commentText]);\n  return __jsx(Form, {\n    onFinish: onSubmitComment,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  }, __jsx(Input.Textarea, {\n    onChange: onSubmitCommentText,\n    rows: 4,\n    value: commentText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }\n  }));\n};\nComment.PropTypes = {\n  post: PropTypes.object.isRequired\n};\nexport default CommentForm;","map":{"version":3,"names":["React","useCallback","useState","Form","useInput","Input","PropTypes","useSelector","CommentForm","post","id","state","user","commentText","onSubmitCommentText","onSubmitComment","console","log","Comment","object","isRequired"],"sources":["/Users/junmishin/Desktop/projects/nobird/front/components/CommentForm.js"],"sourcesContent":["import React, { useCallback, useState } from 'react'\nimport { Form } from 'antd';\nimport useInput from './hooks/useinput';\nimport Input from 'antd/lib/input/Input';\nimport PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\n\n\nconst CommentForm = ({ post }) => {\n    const id = useSelector((state) => state.user.user?.id);\n    const [commentText, onSubmitCommentText] = useInput('');\n    const onSubmitComment = useCallback(() => {\n        console.log(post.id, commentText);\n\n    }, [commentText])\n    return (\n        <Form onFinish={onSubmitComment}>\n            <Input.Textarea\n                onChange={onSubmitCommentText}\n                rows={4}\n                value={commentText}\n            ></Input.Textarea>\n        </Form>\n    )\n}\n\nComment.PropTypes = {\n    post: PropTypes.object.isRequired,\n};\n\nexport default CommentForm\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,WAAW,EAAEC,QAAQ,QAAQ,OAAO;AACpD,SAASC,IAAI,QAAQ,MAAM;AAC3B,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAOC,KAAK,MAAM,sBAAsB;AACxC,OAAOC,SAAS,MAAM,YAAY;AAClC,SAASC,WAAW,QAAQ,aAAa;AAGzC,MAAMC,WAAW,GAAG,CAAC;EAAEC;AAAK,CAAC,KAAK;EAC9B,MAAMC,EAAE,GAAGH,WAAW,CAAEI,KAAK;IAAA;IAAA,2BAAKA,KAAK,CAACC,IAAI,CAACA,IAAI,qDAAf,iBAAiBF,EAAE;EAAA,EAAC;EACtD,MAAM,CAACG,WAAW,EAAEC,mBAAmB,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACvD,MAAMW,eAAe,GAAGd,WAAW,CAAC,MAAM;IACtCe,OAAO,CAACC,GAAG,CAACR,IAAI,CAACC,EAAE,EAAEG,WAAW,CAAC;EAErC,CAAC,EAAE,CAACA,WAAW,CAAC,CAAC;EACjB,OACI,MAAC,IAAI;IAAC,QAAQ,EAAEE,eAAgB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAC5B,MAAC,KAAK,CAAC,QAAQ;IACX,QAAQ,EAAED,mBAAoB;IAC9B,IAAI,EAAE,CAAE;IACR,KAAK,EAAED,WAAY;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EACL,CACf;AAEf,CAAC;AAEDK,OAAO,CAACZ,SAAS,GAAG;EAChBG,IAAI,EAAEH,SAAS,CAACa,MAAM,CAACC;AAC3B,CAAC;AAED,eAAeZ,WAAW"},"metadata":{},"sourceType":"module"}