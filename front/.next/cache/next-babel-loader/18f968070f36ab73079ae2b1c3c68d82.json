{"ast":null,"code":"var _jsxFileName = \"/Users/junmishin/Desktop/projects/nobird/front/components/PostCard.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useCallback } from 'react';\nimport { Card, Button, Popover, Avatar, List, Comment } from 'antd';\nimport { RetweetOutlined, MessageOutlined, HeartOutlined, EllipsisOutlined, HeartTwoTone } from '@ant-design/icons';\nimport { useDispatch, useSelector } from 'react-redux';\nimport PostImages from './PostImages';\nimport CommentForm from './CommentForm';\nimport PostCardContent from './PostCardContent';\nimport { REMOVE_POST_REQUEST } from '../reducers/post';\nimport FollowButton from './FollowButton';\nconst PostCard = ({\n  post\n}) => {\n  const dispatch = useDispatch();\n  const {\n    0: liked,\n    1: setLiked\n  } = useState(false);\n  const {\n    removePostLoading\n  } = useSelector(state => state.post);\n  const {\n    0: commentFormOpened,\n    1: setCommentFormOpened\n  } = useState(false);\n  const onLiked = useCallback(() => {\n    setLiked(prev => prev);\n  }, []);\n  const onToggleCommnet = useCallback(() => {\n    setCommentFormOpened(prev => !prev);\n  });\n  const onRemovePost = useCallback(() => {\n    dispatch({\n      type: REMOVE_POST_REQUEST,\n      data: post.id\n    });\n  });\n  //로그인을 한 상태일 때 조건문 만들기\n  const {\n    user\n  } = useSelector(state => state.user);\n  const id = user && user.id;\n  return __jsx(\"div\", {\n    style: {\n      marginBottom: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, __jsx(Card, {\n    cover: post.Images[0] && __jsx(PostImages, {\n      images: post.Images,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 42\n      }\n    }),\n    actions: [__jsx(RetweetOutlined, {\n      key: \"retweet\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }\n    }), liked ? __jsx(HeartTwoTone, {\n      twoToneColor: \"#eb2f96\",\n      onClick: onUnlike,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 29\n      }\n    }) : __jsx(HeartOutlined, {\n      key: \"heart\",\n      onClick: onLiked,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 90\n      }\n    }), __jsx(MessageOutlined, {\n      key: \"comment\",\n      onClick: onToggleCommnet,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }\n    }), __jsx(Popover, {\n      key: \"more\",\n      content: __jsx(Button.Group, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 25\n        }\n      }, id && post.User.id === id ? __jsx(React.Fragment, null, __jsx(Button, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 37\n        }\n      }, \"\\uC218\\uC815\"), __jsx(Button, {\n        type: \"danger\",\n        loading: removePostLoading,\n        onClick: onRemovePost,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 37\n        }\n      }, \"\\uC0AD\\uC81C\")) : __jsx(Button, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 33\n        }\n      }, \"\\uC2E0\\uACE0\")),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }\n    }, __jsx(EllipsisOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 25\n      }\n    }))],\n    extra: id && __jsx(FollowButton, {\n      post: post,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 30\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, __jsx(Card.Meta, {\n    avatar: __jsx(Avatar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 29\n      }\n    }, post.User.nickname[0]),\n    title: post.User.nickname,\n    description: __jsx(PostCardContent, {\n      postData: post.content,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 34\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }\n  })), commentFormOpened && __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }\n  }, __jsx(CommentForm, {\n    post: post,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 21\n    }\n  }), __jsx(List, {\n    header: `${post.Comments.length}개의 댓글`,\n    itemLayout: \"horizontal\"\n    // dataSource가 renderItem의 item으로 각각 들어간다\n    ,\n    dataSource: post.Comments,\n    renderItem: item => __jsx(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 29\n      }\n    }, __jsx(Comment, {\n      author: item.User.nickname,\n      avatar: __jsx(Avatar, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 45\n        }\n      }, item.User.nickname[0]),\n      content: item.content,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 33\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 21\n    }\n  })));\n};\nexport default PostCard;","map":{"version":3,"names":["React","useState","useCallback","Card","Button","Popover","Avatar","List","Comment","RetweetOutlined","MessageOutlined","HeartOutlined","EllipsisOutlined","HeartTwoTone","useDispatch","useSelector","PostImages","CommentForm","PostCardContent","REMOVE_POST_REQUEST","FollowButton","PostCard","post","dispatch","liked","setLiked","removePostLoading","state","commentFormOpened","setCommentFormOpened","onLiked","prev","onToggleCommnet","onRemovePost","type","data","id","user","marginBottom","Images","onUnlike","User","nickname","content","Comments","length","item"],"sources":["/Users/junmishin/Desktop/projects/nobird/front/components/PostCard.js"],"sourcesContent":["import React, { useState, useCallback } from 'react';\nimport { Card, Button, Popover, Avatar, List, Comment } from 'antd';\nimport { RetweetOutlined, MessageOutlined, HeartOutlined, EllipsisOutlined, HeartTwoTone } from '@ant-design/icons';\nimport { useDispatch, useSelector } from 'react-redux';\nimport PostImages from './PostImages'\nimport CommentForm from './CommentForm';\nimport PostCardContent from './PostCardContent';\nimport { REMOVE_POST_REQUEST } from '../reducers/post';\nimport FollowButton from './FollowButton';\n\n\n\n\nconst PostCard = ({ post }) => {\n    const dispatch = useDispatch();\n    const [liked, setLiked] = useState(false);\n    const { removePostLoading } = useSelector((state) => state.post)\n    const [commentFormOpened, setCommentFormOpened] = useState(false);\n    const onLiked = useCallback(() => {\n        setLiked((prev) => prev);\n\n    }, []);\n\n    const onToggleCommnet = useCallback(() => {\n        setCommentFormOpened((prev => !prev))\n    });\n\n\n    const onRemovePost = useCallback(() => {\n        dispatch({\n            type: REMOVE_POST_REQUEST,\n            data: post.id,\n\n        })\n    });\n    //로그인을 한 상태일 때 조건문 만들기\n    const { user } = useSelector((state) => state.user)\n    const id = user && user.id\n\n    return (\n        <div style={{ marginBottom: 10 }}>\n            <Card\n                cover={post.Images[0] && <PostImages images={post.Images} />}\n                actions={[\n                    <RetweetOutlined key=\"retweet\" />,\n                    liked ? <HeartTwoTone twoToneColor=\"#eb2f96\" onClick={onUnlike} /> : <HeartOutlined key=\"heart\" onClick={onLiked} />,\n                    <MessageOutlined key=\"comment\" onClick={onToggleCommnet} />,\n                    <Popover key=\"more\" content={(\n                        <Button.Group>\n                            {/* 내 아이디가 있고 게시글 작성자 아이디가 나랑 같으면 수정 삭제버튼 보이고 다르면 신고버튼 보이게*/}\n                            {id && post.User.id === id ? (\n                                <>\n                                    <Button>수정</Button>\n                                    <Button type=\"danger\" loading={removePostLoading} onClick={onRemovePost}>삭제</Button>\n                                </>)\n                                :\n                                <Button>신고</Button>}\n\n\n                        </Button.Group>\n                    )}>\n                        <EllipsisOutlined />\n                    </Popover>\n                ]}\n                extra={id && <FollowButton post={post} />}\n\n            >\n                <Card.Meta\n                    avatar={<Avatar>{post.User.nickname[0]}</Avatar>}\n                    title={post.User.nickname}\n                    description={<PostCardContent postData={post.content} />}\n                />\n            </Card>\n            {commentFormOpened && (\n                <div>\n                    <CommentForm post={post} />\n                    <List header={`${post.Comments.length}개의 댓글`}\n                        itemLayout='horizontal'\n                        // dataSource가 renderItem의 item으로 각각 들어간다\n                        dataSource={post.Comments}\n                        renderItem={(item) => (\n                            <li>\n                                <Comment\n                                    author={item.User.nickname}\n                                    avatar={<Avatar>{item.User.nickname[0]}</Avatar>}\n                                    content={item.content}\n                                />\n\n                            </li>\n                        )}\n                    />\n                </div>\n            )}\n            {/* <CommentForm />\n            <Comments /> */}\n        </div>\n\n    )\n}\n\nexport default PostCard\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}