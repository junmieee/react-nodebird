{"ast":null,"code":"import { all, delay, put, takeLatest, fork } from \"redux-saga/effects\";\nimport axios from \"axios\";\nimport { ADD_POST_SUCCESS, ADD_POST_FAILURE, ADD_POST_REQUEST, ADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS, ADD_COMMENT_FAILURE } from '../reducers/post';\nimport { ADD_POST_TO_ME } from '../reducers/user';\nimport shorId from 'shortid';\nfunction addPostAPI(data) {\n  return axios.post('/api/post', data);\n}\nfunction* addPost(action) {\n  const id = shorId.generate();\n  try {\n    yield delay(1000);\n    yield put({\n      type: ADD_POST_SUCCESS,\n      data: action.data\n    });\n    yield put({\n      type: ADD_POST_TO_ME\n    });\n  } catch (err) {\n    yield put({\n      type: ADD_POST_FAILURE,\n      data: err.response.data\n    });\n  }\n}\n;\nfunction addCommentAPI(data) {\n  return axios.post(`/api/post/${data.postId}/comment`, data);\n}\nfunction* addComment(action) {\n  try {\n    yield delay(1000);\n    yield put({\n      type: ADD_COMMENT_SUCCESS,\n      data: action.data\n    });\n  } catch (err) {\n    yield put({\n      type: ADD_COMMENT_FAILURE,\n      data: err.response.data\n    });\n  }\n}\nfunction* watchAddPost() {\n  yield takeLatest(ADD_POST_REQUEST, addPost);\n}\n;\nfunction* watchAddComment() {\n  yield takeLatest(ADD_COMMENT_REQUEST, addComment);\n}\nexport default function* postSaga() {\n  yield all([fork(watchAddPost), fork(watchAddComment)]);\n}","map":{"version":3,"names":["all","delay","put","takeLatest","fork","axios","ADD_POST_SUCCESS","ADD_POST_FAILURE","ADD_POST_REQUEST","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","ADD_POST_TO_ME","shorId","addPostAPI","data","post","addPost","action","id","generate","type","err","response","addCommentAPI","postId","addComment","watchAddPost","watchAddComment","postSaga"],"sources":["/Users/junmishin/Desktop/projects/nobird/front/sagas/post.js"],"sourcesContent":["import { all, delay, put, takeLatest, fork } from \"redux-saga/effects\";\nimport axios from \"axios\";\nimport {\n    ADD_POST_SUCCESS, ADD_POST_FAILURE, ADD_POST_REQUEST,\n    ADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS, ADD_COMMENT_FAILURE,\n\n} from '../reducers/post'\n\nimport { ADD_POST_TO_ME } from '../reducers/user';\nimport shorId from 'shortid';\n\n\n\n\nfunction addPostAPI(data) {\n    return axios.post('/api/post', data)\n}\n\nfunction* addPost(action) {\n    const id = shorId.generate();\n    try {\n        yield delay(1000);\n        yield put({\n            type: ADD_POST_SUCCESS,\n            data: action.data\n        });\n        yield put({\n            type: ADD_POST_TO_ME,\n        })\n    }\n    catch (err) {\n        yield put({\n            type: ADD_POST_FAILURE,\n            data: err.response.data,\n        })\n    }\n};\n\nfunction addCommentAPI(data) {\n    return axios.post(`/api/post/${data.postId}/comment`, data)\n}\n\nfunction* addComment(action) {\n    try {\n        yield delay(1000);\n        yield put({\n            type: ADD_COMMENT_SUCCESS,\n            data: action.data\n        });\n    }\n    catch (err) {\n        yield put({\n            type: ADD_COMMENT_FAILURE,\n            data: err.response.data,\n        })\n    }\n}\n\n\n\nfunction* watchAddPost() {\n    yield takeLatest(ADD_POST_REQUEST, addPost);\n};\n\nfunction* watchAddComment() {\n    yield takeLatest(ADD_COMMENT_REQUEST, addComment);\n}\n\n\n\n\n\n\nexport default function* postSaga() {\n    yield all([\n        fork(watchAddPost),\n        fork(watchAddComment)\n    ])\n} "],"mappings":"AAAA,SAASA,GAAG,EAAEC,KAAK,EAAEC,GAAG,EAAEC,UAAU,EAAEC,IAAI,QAAQ,oBAAoB;AACtE,OAAOC,KAAK,MAAM,OAAO;AACzB,SACIC,gBAAgB,EAAEC,gBAAgB,EAAEC,gBAAgB,EACpDC,mBAAmB,EAAEC,mBAAmB,EAAEC,mBAAmB,QAE1D,kBAAkB;AAEzB,SAASC,cAAc,QAAQ,kBAAkB;AACjD,OAAOC,MAAM,MAAM,SAAS;AAK5B,SAASC,UAAU,CAACC,IAAI,EAAE;EACtB,OAAOV,KAAK,CAACW,IAAI,CAAC,WAAW,EAAED,IAAI,CAAC;AACxC;AAEA,UAAUE,OAAO,CAACC,MAAM,EAAE;EACtB,MAAMC,EAAE,GAAGN,MAAM,CAACO,QAAQ,EAAE;EAC5B,IAAI;IACA,MAAMnB,KAAK,CAAC,IAAI,CAAC;IACjB,MAAMC,GAAG,CAAC;MACNmB,IAAI,EAAEf,gBAAgB;MACtBS,IAAI,EAAEG,MAAM,CAACH;IACjB,CAAC,CAAC;IACF,MAAMb,GAAG,CAAC;MACNmB,IAAI,EAAET;IACV,CAAC,CAAC;EACN,CAAC,CACD,OAAOU,GAAG,EAAE;IACR,MAAMpB,GAAG,CAAC;MACNmB,IAAI,EAAEd,gBAAgB;MACtBQ,IAAI,EAAEO,GAAG,CAACC,QAAQ,CAACR;IACvB,CAAC,CAAC;EACN;AACJ;AAAC;AAED,SAASS,aAAa,CAACT,IAAI,EAAE;EACzB,OAAOV,KAAK,CAACW,IAAI,CAAE,aAAYD,IAAI,CAACU,MAAO,UAAS,EAAEV,IAAI,CAAC;AAC/D;AAEA,UAAUW,UAAU,CAACR,MAAM,EAAE;EACzB,IAAI;IACA,MAAMjB,KAAK,CAAC,IAAI,CAAC;IACjB,MAAMC,GAAG,CAAC;MACNmB,IAAI,EAAEX,mBAAmB;MACzBK,IAAI,EAAEG,MAAM,CAACH;IACjB,CAAC,CAAC;EACN,CAAC,CACD,OAAOO,GAAG,EAAE;IACR,MAAMpB,GAAG,CAAC;MACNmB,IAAI,EAAEV,mBAAmB;MACzBI,IAAI,EAAEO,GAAG,CAACC,QAAQ,CAACR;IACvB,CAAC,CAAC;EACN;AACJ;AAIA,UAAUY,YAAY,GAAG;EACrB,MAAMxB,UAAU,CAACK,gBAAgB,EAAES,OAAO,CAAC;AAC/C;AAAC;AAED,UAAUW,eAAe,GAAG;EACxB,MAAMzB,UAAU,CAACM,mBAAmB,EAAEiB,UAAU,CAAC;AACrD;AAOA,eAAe,UAAUG,QAAQ,GAAG;EAChC,MAAM7B,GAAG,CAAC,CACNI,IAAI,CAACuB,YAAY,CAAC,EAClBvB,IAAI,CAACwB,eAAe,CAAC,CACxB,CAAC;AACN"},"metadata":{},"sourceType":"module"}