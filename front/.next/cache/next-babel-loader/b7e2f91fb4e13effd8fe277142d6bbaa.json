{"ast":null,"code":"import { all, delay, fork, put, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\nfunction logInAPI(data) {\n  return axios.post('/api/login', data);\n}\nfunction* logIn(action) {\n  try {\n    yield delay(1000);\n    yield put({\n      type: 'LOG_IN_SUCCESS',\n      data: action.data\n    });\n  } catch (err) {\n    yield put({\n      type: 'LOG_OUT_FAILURE',\n      data: err.response.data\n    });\n  }\n}\nfunction logOutAPI() {\n  return axios.post('/api/logout');\n}\nfunction* logOut() {\n  try {\n    // const result = yield call(logOutAPI);\n    yield delay(1000);\n    yield put({\n      type: LOG_OUT_SUCCESS\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: LOG_OUT_FAILURE,\n      error: err.response.data\n    });\n  }\n}\nfunction* watchLogIn() {\n  yield takeLatest('LOG_IN_REQUEST', logIn);\n}\nfunction* watchLogOut() {\n  yield takeLatest('LOG_OUT_REQUEST', logOut);\n}\nexport default function* userSaga() {\n  yield all([fork(watchLogIn), fork(watchLogOut)]);\n}","map":{"version":3,"names":["all","delay","fork","put","takeLatest","axios","logInAPI","data","post","logIn","action","type","err","response","logOutAPI","logOut","LOG_OUT_SUCCESS","console","error","LOG_OUT_FAILURE","watchLogIn","watchLogOut","userSaga"],"sources":["/Users/junmishin/Desktop/projects/nobird/front/sagas/user.js"],"sourcesContent":["import { all, delay, fork, put, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\n\n\nfunction logInAPI(data) {\n    return axios.post('/api/login', data)\n}\n\nfunction* logIn(action) {\n    try {\n        yield delay(1000);\n        yield put({\n            type: 'LOG_IN_SUCCESS',\n            data: action.data\n        });\n    }\n    catch (err) {\n        yield put({\n            type: 'LOG_OUT_FAILURE',\n            data: err.response.data,\n        })\n    }\n}\n\n\nfunction logOutAPI() {\n    return axios.post('/api/logout');\n}\n\nfunction* logOut() {\n    try {\n        // const result = yield call(logOutAPI);\n        yield delay(1000);\n        yield put({\n            type: LOG_OUT_SUCCESS,\n        });\n    } catch (err) {\n        console.error(err);\n        yield put({\n            type: LOG_OUT_FAILURE,\n            error: err.response.data,\n        });\n    }\n}\n\n\nfunction* watchLogIn() {\n    yield takeLatest('LOG_IN_REQUEST', logIn);\n}\n\nfunction* watchLogOut() {\n    yield takeLatest('LOG_OUT_REQUEST', logOut);\n}\n\nexport default function* userSaga() {\n    yield all([\n        fork(watchLogIn),\n        fork(watchLogOut)\n\n    ])\n}"],"mappings":"AAAA,SAASA,GAAG,EAAEC,KAAK,EAAEC,IAAI,EAAEC,GAAG,EAAEC,UAAU,QAAQ,oBAAoB;AACtE,OAAOC,KAAK,MAAM,OAAO;AAGzB,SAASC,QAAQ,CAACC,IAAI,EAAE;EACpB,OAAOF,KAAK,CAACG,IAAI,CAAC,YAAY,EAAED,IAAI,CAAC;AACzC;AAEA,UAAUE,KAAK,CAACC,MAAM,EAAE;EACpB,IAAI;IACA,MAAMT,KAAK,CAAC,IAAI,CAAC;IACjB,MAAME,GAAG,CAAC;MACNQ,IAAI,EAAE,gBAAgB;MACtBJ,IAAI,EAAEG,MAAM,CAACH;IACjB,CAAC,CAAC;EACN,CAAC,CACD,OAAOK,GAAG,EAAE;IACR,MAAMT,GAAG,CAAC;MACNQ,IAAI,EAAE,iBAAiB;MACvBJ,IAAI,EAAEK,GAAG,CAACC,QAAQ,CAACN;IACvB,CAAC,CAAC;EACN;AACJ;AAGA,SAASO,SAAS,GAAG;EACjB,OAAOT,KAAK,CAACG,IAAI,CAAC,aAAa,CAAC;AACpC;AAEA,UAAUO,MAAM,GAAG;EACf,IAAI;IACA;IACA,MAAMd,KAAK,CAAC,IAAI,CAAC;IACjB,MAAME,GAAG,CAAC;MACNQ,IAAI,EAAEK;IACV,CAAC,CAAC;EACN,CAAC,CAAC,OAAOJ,GAAG,EAAE;IACVK,OAAO,CAACC,KAAK,CAACN,GAAG,CAAC;IAClB,MAAMT,GAAG,CAAC;MACNQ,IAAI,EAAEQ,eAAe;MACrBD,KAAK,EAAEN,GAAG,CAACC,QAAQ,CAACN;IACxB,CAAC,CAAC;EACN;AACJ;AAGA,UAAUa,UAAU,GAAG;EACnB,MAAMhB,UAAU,CAAC,gBAAgB,EAAEK,KAAK,CAAC;AAC7C;AAEA,UAAUY,WAAW,GAAG;EACpB,MAAMjB,UAAU,CAAC,iBAAiB,EAAEW,MAAM,CAAC;AAC/C;AAEA,eAAe,UAAUO,QAAQ,GAAG;EAChC,MAAMtB,GAAG,CAAC,CACNE,IAAI,CAACkB,UAAU,CAAC,EAChBlB,IAAI,CAACmB,WAAW,CAAC,CAEpB,CAAC;AACN"},"metadata":{},"sourceType":"module"}