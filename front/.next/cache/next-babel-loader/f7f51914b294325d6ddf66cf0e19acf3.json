{"ast":null,"code":"var _jsxFileName = \"/Users/junmishin/Desktop/projects/nobird/front/components/PostForm.js\";\nvar __jsx = React.createElement;\nimport React, { useCallback, useState, useRef } from 'react';\nimport { Button, Form, Input } from 'antd';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addPost } from '../reducers/post';\nconst PostForm = () => {\n  const imagePaths = useSelector(state => state.post.imagePaths);\n  const dispatch = useDispatch();\n  const {\n    0: text,\n    1: setText\n  } = useState('');\n  const imageInput = useRef();\n  const onChangeText = useCallback(e => {\n    setText(e.target.value);\n  }, []);\n  const onSubmit = useCallback(() => {\n    setText('');\n    dispatch(addPost(text));\n  }, []);\n  const onClickImageUpload = useCallback(() => {\n    imageInput.current.click();\n  }, [imageInput.current]);\n  return __jsx(Form, {\n    style: {\n      margin: '10px 0 20px'\n    },\n    encType: \"multipart/form-data\",\n    onFinish: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, __jsx(Input.TextArea, {\n    value: text,\n    onChange: onChangeText,\n    maxLength: 140,\n    placeholder: \"\\uC5B4\\uB5A4 \\uC2E0\\uAE30\\uD55C \\uC77C\\uC774 \\uC788\\uC5C8\\uB098\\uC694?\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }, __jsx(\"input\", {\n    type: \"file\",\n    multiple: true,\n    hidden: true,\n    ref: imageInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }\n  }), __jsx(Button, {\n    onClick: onClickImageUpload,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }\n  }, \"\\uC774\\uBBF8\\uC9C0 \\uC5C5\\uB85C\\uB4DC\"), __jsx(Button, {\n    typ: \"primary\",\n    style: {\n      float: 'right'\n    },\n    htmlType: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }\n  }, \"\\uC9F9\\uC9F9\")), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, imagePaths.map(v => __jsx(\"div\", {\n    key: v,\n    style: {\n      display: 'inline-block'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 21\n    }\n  }, __jsx(\"img\", {\n    src: v,\n    style: {\n      width: '200px'\n    },\n    alt: v,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 25\n    }\n  }), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 25\n    }\n  }, __jsx(Button, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 29\n    }\n  }, \"\\uC81C\\uAC70\"))))));\n};\nexport default PostForm;","map":{"version":3,"names":["React","useCallback","useState","useRef","Button","Form","Input","useDispatch","useSelector","addPost","PostForm","imagePaths","state","post","dispatch","text","setText","imageInput","onChangeText","e","target","value","onSubmit","onClickImageUpload","current","click","margin","float","map","v","display","width"],"sources":["/Users/junmishin/Desktop/projects/nobird/front/components/PostForm.js"],"sourcesContent":["import React, { useCallback, useState, useRef } from 'react';\nimport { Button, Form, Input } from 'antd';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addPost } from '../reducers/post'\nconst PostForm = () => {\n    const imagePaths = useSelector((state) => state.post.imagePaths);\n    const dispatch = useDispatch()\n    const [text, setText] = useState('');\n    const imageInput = useRef();\n    const onChangeText = useCallback((e) => {\n        setText(e.target.value)\n\n    }, [])\n    const onSubmit = useCallback(() => {\n        setText('')\n        dispatch(addPost(text))\n\n    }, []);\n    const onClickImageUpload = useCallback(() => {\n        imageInput.current.click();\n\n    }, [imageInput.current])\n    return (\n        <Form style={{ margin: '10px 0 20px' }} encType='multipart/form-data' onFinish={onSubmit}>\n            <Input.TextArea\n                value={text}\n                onChange={onChangeText}\n                maxLength={140}\n                placeholder=\"어떤 신기한 일이 있었나요?\"\n            />\n            <div>\n                <input type='file' multiple hidden ref={imageInput} />\n                <Button onClick={onClickImageUpload}>이미지 업로드</Button>\n                <Button typ=\"primary\" style={{ float: 'right' }} htmlType=\"submit\">짹짹</Button>\n            </div>\n            <div>\n                {imagePaths.map((v) => (\n                    <div key={v} style={{ display: 'inline-block' }}>\n                        <img src={v} style={{ width: '200px' }} alt={v} />\n                        <div>\n                            <Button>제거</Button>\n                        </div>\n\n                    </div>\n                ))}\n\n            </div>\n\n        </Form>\n    )\n}\n\nexport default PostForm\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,WAAW,EAAEC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AAC5D,SAASC,MAAM,EAAEC,IAAI,EAAEC,KAAK,QAAQ,MAAM;AAC1C,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,OAAO,QAAQ,kBAAkB;AAC1C,MAAMC,QAAQ,GAAG,MAAM;EACnB,MAAMC,UAAU,GAAGH,WAAW,CAAEI,KAAK,IAAKA,KAAK,CAACC,IAAI,CAACF,UAAU,CAAC;EAChE,MAAMG,QAAQ,GAAGP,WAAW,EAAE;EAC9B,MAAM;IAAA,GAACQ,IAAI;IAAA,GAAEC;EAAO,IAAId,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAMe,UAAU,GAAGd,MAAM,EAAE;EAC3B,MAAMe,YAAY,GAAGjB,WAAW,CAAEkB,CAAC,IAAK;IACpCH,OAAO,CAACG,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAE3B,CAAC,EAAE,EAAE,CAAC;EACN,MAAMC,QAAQ,GAAGrB,WAAW,CAAC,MAAM;IAC/Be,OAAO,CAAC,EAAE,CAAC;IACXF,QAAQ,CAACL,OAAO,CAACM,IAAI,CAAC,CAAC;EAE3B,CAAC,EAAE,EAAE,CAAC;EACN,MAAMQ,kBAAkB,GAAGtB,WAAW,CAAC,MAAM;IACzCgB,UAAU,CAACO,OAAO,CAACC,KAAK,EAAE;EAE9B,CAAC,EAAE,CAACR,UAAU,CAACO,OAAO,CAAC,CAAC;EACxB,OACI,MAAC,IAAI;IAAC,KAAK,EAAE;MAAEE,MAAM,EAAE;IAAc,CAAE;IAAC,OAAO,EAAC,qBAAqB;IAAC,QAAQ,EAAEJ,QAAS;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACrF,MAAC,KAAK,CAAC,QAAQ;IACX,KAAK,EAAEP,IAAK;IACZ,QAAQ,EAAEG,YAAa;IACvB,SAAS,EAAE,GAAI;IACf,WAAW,EAAC,wEAAiB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAC/B,EACF;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACI;IAAO,IAAI,EAAC,MAAM;IAAC,QAAQ;IAAC,MAAM;IAAC,GAAG,EAAED,UAAW;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAG,EACtD,MAAC,MAAM;IAAC,OAAO,EAAEM,kBAAmB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAC,uCAAO,CAAS,EACrD,MAAC,MAAM;IAAC,GAAG,EAAC,SAAS;IAAC,KAAK,EAAE;MAAEI,KAAK,EAAE;IAAQ,CAAE;IAAC,QAAQ,EAAC,QAAQ;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAC,cAAE,CAAS,CAC5E,EACN;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACKhB,UAAU,CAACiB,GAAG,CAAEC,CAAC,IACd;IAAK,GAAG,EAAEA,CAAE;IAAC,KAAK,EAAE;MAAEC,OAAO,EAAE;IAAe,CAAE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAC5C;IAAK,GAAG,EAAED,CAAE;IAAC,KAAK,EAAE;MAAEE,KAAK,EAAE;IAAQ,CAAE;IAAC,GAAG,EAAEF,CAAE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAG,EAClD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACI,MAAC,MAAM;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAC,cAAE,CAAS,CACjB,CAGb,CAAC,CAEA,CAEH;AAEf,CAAC;AAED,eAAenB,QAAQ"},"metadata":{},"sourceType":"module"}