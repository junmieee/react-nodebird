{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nimport Password from \"antd/lib/input/Password\";\nexport const initialState = {\n  mainPosts: [{\n    id: 1,\n    User: {\n      id: 1,\n      nickname: 'Chloe'\n    },\n    content: '첫 번째 게시글 #헤시태그 #익스프레스',\n    Images: [{}, {}, {}],\n    Comments: [{\n      user: {\n        nickname: 'nero'\n      },\n      content: '우아아'\n    }, {\n      user: {\n        nickname: 'hero'\n      },\n      content: '신기하다'\n    }]\n  }],\n  //업로드 하는 이미지 경로들\n  imagePaths: [],\n  //포스트 추가가 완료되면 true \n  postAdded: false\n};\nconst ADD_POST = 'ADD_POST';\nexport const addPost = {\n  type: ADD_POST\n};\nconst dummyPost = {\n  id: 2,\n  content: '더미데이터입니다.',\n  User: {\n    id: 1,\n    nickname: 'Chloe'\n  },\n  Images: [],\n  Comments: []\n};\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_POST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        mainPosts: [dummyPost, ...state.mainPosts],\n        postAdded: true\n      });\n    default:\n      return state;\n  }\n};\nexport default reducer;","map":{"version":3,"names":["Password","initialState","mainPosts","id","User","nickname","content","Images","Comments","user","imagePaths","postAdded","ADD_POST","addPost","type","dummyPost","reducer","state","action"],"sources":["/Users/junmishin/Desktop/projects/nobird/front/reducers/post.js"],"sourcesContent":["import Password from \"antd/lib/input/Password\";\n\nexport const initialState = {\n    mainPosts: [{\n        id: 1,\n        User: {\n            id: 1,\n            nickname: 'Chloe',\n        },\n        content: '첫 번째 게시글 #헤시태그 #익스프레스',\n        Images: [{\n\n        }, {\n\n        }, {\n\n        }],\n        Comments: [\n            {\n                user: {\n                    nickname: 'nero',\n                },\n                content: '우아아'\n            },\n            {\n                user: {\n                    nickname: 'hero',\n\n                },\n                content: '신기하다'\n\n            }\n        ]\n    }],\n    //업로드 하는 이미지 경로들\n    imagePaths: [],\n    //포스트 추가가 완료되면 true \n    postAdded: false,\n};\n\nconst ADD_POST = 'ADD_POST';\n\nexport const addPost = {\n    type: ADD_POST\n};\n\n\nconst dummyPost = {\n    id: 2,\n    content: '더미데이터입니다.',\n    User: {\n        id: 1,\n        nickname: 'Chloe'\n    },\n    Images: [],\n    Comments: [],\n\n};\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case ADD_POST:\n            return {\n                ...state,\n                mainPosts: [dummyPost, ...state.mainPosts],\n                postAdded: true,\n            }\n\n        default:\n            return state;\n    }\n}\n\n\n\nexport default reducer"],"mappings":";;;;;AAAA,OAAOA,QAAQ,MAAM,yBAAyB;AAE9C,OAAO,MAAMC,YAAY,GAAG;EACxBC,SAAS,EAAE,CAAC;IACRC,EAAE,EAAE,CAAC;IACLC,IAAI,EAAE;MACFD,EAAE,EAAE,CAAC;MACLE,QAAQ,EAAE;IACd,CAAC;IACDC,OAAO,EAAE,uBAAuB;IAChCC,MAAM,EAAE,CAAC,CAET,CAAC,EAAE,CAEH,CAAC,EAAE,CAEH,CAAC,CAAC;IACFC,QAAQ,EAAE,CACN;MACIC,IAAI,EAAE;QACFJ,QAAQ,EAAE;MACd,CAAC;MACDC,OAAO,EAAE;IACb,CAAC,EACD;MACIG,IAAI,EAAE;QACFJ,QAAQ,EAAE;MAEd,CAAC;MACDC,OAAO,EAAE;IAEb,CAAC;EAET,CAAC,CAAC;EACF;EACAI,UAAU,EAAE,EAAE;EACd;EACAC,SAAS,EAAE;AACf,CAAC;AAED,MAAMC,QAAQ,GAAG,UAAU;AAE3B,OAAO,MAAMC,OAAO,GAAG;EACnBC,IAAI,EAAEF;AACV,CAAC;AAGD,MAAMG,SAAS,GAAG;EACdZ,EAAE,EAAE,CAAC;EACLG,OAAO,EAAE,WAAW;EACpBF,IAAI,EAAE;IACFD,EAAE,EAAE,CAAC;IACLE,QAAQ,EAAE;EACd,CAAC;EACDE,MAAM,EAAE,EAAE;EACVC,QAAQ,EAAE;AAEd,CAAC;AAED,MAAMQ,OAAO,GAAG,CAACC,KAAK,GAAGhB,YAAY,EAAEiB,MAAM,KAAK;EAC9C,QAAQA,MAAM,CAACJ,IAAI;IACf,KAAKF,QAAQ;MACT,uCACOK,KAAK;QACRf,SAAS,EAAE,CAACa,SAAS,EAAE,GAAGE,KAAK,CAACf,SAAS,CAAC;QAC1CS,SAAS,EAAE;MAAI;IAGvB;MACI,OAAOM,KAAK;EAAC;AAEzB,CAAC;AAID,eAAeD,OAAO"},"metadata":{},"sourceType":"module"}