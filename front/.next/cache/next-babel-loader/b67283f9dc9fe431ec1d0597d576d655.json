{"ast":null,"code":"var _jsxFileName = \"/Users/junmishin/Desktop/projects/nobird/front/components/PostForm.js\";\nvar __jsx = React.createElement;\nimport React, { useCallback, useState, useRef, useEffect } from 'react';\nimport { Button, Form, Input } from 'antd';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addPost, UPLOAD_IMAGES_REQUEST } from '../reducers/post';\nimport useInput from './hooks/useinput';\nconst PostForm = () => {\n  const {\n    imagePaths,\n    addPostDone\n  } = useSelector(state => state.post);\n  const dispatch = useDispatch();\n  const [text, onChangeText, setText] = useInput('');\n  useEffect(() => {\n    if (addPostDone) {\n      setText('');\n    }\n  }, [addPostDone]);\n  const onSubmit = useCallback(() => {\n    dispatch(addPost(text));\n  }, [text]);\n  const imageInput = useRef();\n  const onClickImageUpload = useCallback(() => {\n    imageInput.current.click();\n  }, [imageInput.current]);\n  const onChangeImages = useCallback(e => {\n    console.log('images', e.target.files);\n    const imagesFormData = new FormData();\n    [].forEach.call(e.target.files, f => {\n      imagesFormData.append('image', f);\n    });\n    dispatch({\n      type: UPLOAD_IMAGES_REQUEST,\n      data: imagesFormData\n    });\n  });\n  const onRemoveImage = useCallback(index => () => {\n    dispatch({\n      type: REMOVE_IMAGE,\n      data: index\n    });\n  });\n  return __jsx(Form, {\n    style: {\n      margin: '10px 0 20px'\n    },\n    encType: \"multipart/form-data\",\n    onFinish: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, __jsx(Input.TextArea, {\n    value: text,\n    onChange: onChangeText,\n    maxLength: 140,\n    placeholder: \"\\uC5B4\\uB5A4 \\uC2E0\\uAE30\\uD55C \\uC77C\\uC774 \\uC788\\uC5C8\\uB098\\uC694?\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }, __jsx(\"input\", {\n    type: \"file\",\n    name: \"image\",\n    multiple: true,\n    hidden: true,\n    ref: imageInput,\n    onChange: onChangeImages,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }\n  }), __jsx(Button, {\n    onClick: onClickImageUpload,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  }, \"\\uC774\\uBBF8\\uC9C0 \\uC5C5\\uB85C\\uB4DC\"), __jsx(Button, {\n    type: \"primary\",\n    style: {\n      float: 'right'\n    },\n    htmlType: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }\n  }, \"\\uC9F9\\uC9F9\")), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }, imagePaths.map(v => __jsx(\"div\", {\n    key: v,\n    style: {\n      display: 'inline-block'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 21\n    }\n  }, __jsx(\"img\", {\n    src: `http://localhost:3065/${v}`,\n    style: {\n      width: '100px'\n    },\n    alt: v,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 25\n    }\n  }), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 25\n    }\n  }, __jsx(Button, {\n    onClick: onRemoveImage(i),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 29\n    }\n  }, \"\\uC81C\\uAC70\"))))));\n};\nexport default PostForm;","map":{"version":3,"names":["React","useCallback","useState","useRef","useEffect","Button","Form","Input","useDispatch","useSelector","addPost","UPLOAD_IMAGES_REQUEST","useInput","PostForm","imagePaths","addPostDone","state","post","dispatch","text","onChangeText","setText","onSubmit","imageInput","onClickImageUpload","current","click","onChangeImages","e","console","log","target","files","imagesFormData","FormData","forEach","call","f","append","type","data","onRemoveImage","index","REMOVE_IMAGE","margin","float","map","v","display","width","i"],"sources":["/Users/junmishin/Desktop/projects/nobird/front/components/PostForm.js"],"sourcesContent":["import React, { useCallback, useState, useRef, useEffect } from 'react';\nimport { Button, Form, Input } from 'antd';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addPost, UPLOAD_IMAGES_REQUEST } from '../reducers/post'\nimport useInput from './hooks/useinput';\n\n\nconst PostForm = () => {\n    const { imagePaths, addPostDone } = useSelector((state) => state.post);\n    const dispatch = useDispatch()\n    const [text, onChangeText, setText] = useInput('');\n\n    useEffect(() => {\n        if (addPostDone) {\n            setText('');\n        }\n    }, [addPostDone])\n\n\n    const onSubmit = useCallback(() => {\n        dispatch(addPost(text))\n\n    }, [text]);\n\n    const imageInput = useRef();\n    const onClickImageUpload = useCallback(() => {\n        imageInput.current.click();\n\n    }, [imageInput.current])\n\n\n    const onChangeImages = useCallback((e) => {\n        console.log('images', e.target.files);\n        const imagesFormData = new FormData();\n        [].forEach.call(e.target.files, (f) => {\n            imagesFormData.append('image', f);\n        });\n        dispatch({\n            type: UPLOAD_IMAGES_REQUEST,\n            data: imagesFormData,\n        })\n\n    })\n\n\n    const onRemoveImage = useCallback((index) => () => {\n        dispatch({\n            type: REMOVE_IMAGE,\n            data: index,\n        })\n\n    })\n\n    return (\n        <Form style={{ margin: '10px 0 20px' }} encType='multipart/form-data' onFinish={onSubmit}>\n            <Input.TextArea\n                value={text}\n                onChange={onChangeText}\n                maxLength={140}\n                placeholder=\"어떤 신기한 일이 있었나요?\"\n            />\n            <div>\n                <input type='file' name=\"image\" multiple hidden ref={imageInput} onChange={onChangeImages} />\n                <Button onClick={onClickImageUpload}>이미지 업로드</Button>\n                <Button type=\"primary\" style={{ float: 'right' }} htmlType=\"submit\">짹짹</Button>\n            </div>\n            <div>\n                {imagePaths.map((v) => (\n                    <div key={v} style={{ display: 'inline-block' }}>\n                        <img src={`http://localhost:3065/${v}`} style={{ width: '100px' }} alt={v} />\n                        <div>\n                            <Button onClick={onRemoveImage(i)}>제거</Button>\n                        </div>\n\n                    </div>\n                ))}\n\n            </div>\n\n        </Form>\n    )\n}\n\nexport default PostForm\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}